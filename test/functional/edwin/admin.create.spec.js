// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')

describe('create-admin-users-name-CV', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('create-admin-users-name-CV', async function() {
    await driver.get("http://localhost:1111/admin/setup")
    await driver.manage().window().setRect({ width: 654, height: 728 })
    await driver.findElement(By.id("usersName")).click()
    await driver.findElement(By.id("usersName")).sendKeys("admin")
    await driver.findElement(By.id("userEmail")).click()
    await driver.findElement(By.id("userEmail")).sendKeys("admin@admin.com")
    await driver.findElement(By.id("userPassword")).click()
    await driver.findElement(By.id("userPassword")).sendKeys("admin")
    await driver.findElement(By.id("frm_userPassword_confirm")).click()
    await driver.findElement(By.id("frm_userPassword_confirm")).sendKeys("admin")
    await driver.findElement(By.css(".btn-outline-primary")).click()
    assert(await driver.findElement(By.id("notify_message")).getText() == "User account inserted")
  })
})

describe('create-admin-users-name-CI', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('create-admin-users-name-CI', async function() {
    await driver.get("http://localhost:1111/admin/setup")
    await driver.manage().window().setRect({ width: 654, height: 728 })
    await driver.findElement(By.id("usersName")).click()
    await driver.findElement(By.id("usersName")).sendKeys("\"\"")
    await driver.findElement(By.id("userEmail")).click()
    await driver.findElement(By.id("userEmail")).sendKeys("admin@admin.com")
    await driver.findElement(By.id("userPassword")).click()
    await driver.findElement(By.id("userPassword")).sendKeys("admin")
    await driver.findElement(By.id("frm_userPassword_confirm")).click()
    await driver.findElement(By.id("frm_userPassword_confirm")).sendKeys("admin")
    await driver.findElement(By.css(".btn-outline-primary")).click()
    {
      const element = await driver.findElement(By.id("usersName"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
  })
})


describe('create-admin-users-name-CI-2', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('create-admin-users-name-CI-2', async function() {
    await driver.get("http://localhost:1111/admin/setup")
    await driver.manage().window().setRect({ width: 654, height: 728 })
    await driver.findElement(By.id("usersName")).click()
    await driver.findElement(By.id("usersName")).sendKeys("ad")
    await driver.findElement(By.id("userEmail")).click()
    await driver.findElement(By.id("userEmail")).sendKeys("admin@admin.com")
    await driver.findElement(By.id("userPassword")).click()
    await driver.findElement(By.id("userPassword")).sendKeys("admin")
    await driver.findElement(By.id("frm_userPassword_confirm")).click()
    await driver.findElement(By.id("frm_userPassword_confirm")).sendKeys("admin")
    await driver.findElement(By.css(".btn-outline-primary")).click()
    assert(await driver.findElement(By.id("notify_message")).getText() == "User account inserted")
  })
})

describe('create-admin-users-email-CV', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('create-admin-users-email-CV', async function() {
    await driver.get("http://localhost:1111/admin/setup")
    await driver.manage().window().setRect({ width: 654, height: 728 })
    await driver.findElement(By.id("usersName")).click()
    await driver.findElement(By.id("usersName")).sendKeys("admin")
    await driver.findElement(By.id("userEmail")).click()
    await driver.findElement(By.id("userEmail")).sendKeys("admin19@correo.com")
    await driver.findElement(By.id("userPassword")).click()
    await driver.findElement(By.id("userPassword")).sendKeys("admin")
    await driver.findElement(By.id("frm_userPassword_confirm")).click()
    await driver.findElement(By.id("frm_userPassword_confirm")).sendKeys("admin")
    await driver.findElement(By.css(".btn-outline-primary")).click()
    assert(await driver.findElement(By.id("notify_message")).getText() == "User account inserted")
  })
})

describe('create-admin-users-email-CI-1', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('create-admin-users-email-CI-1', async function() {
    await driver.get("http://localhost:1111/admin/setup")
    await driver.manage().window().setRect({ width: 654, height: 728 })
    await driver.findElement(By.id("usersName")).click()
    await driver.findElement(By.id("usersName")).sendKeys("admin")
    await driver.findElement(By.id("userEmail")).click()
    await driver.findElement(By.id("userEmail")).sendKeys("admin19@correo")
    await driver.findElement(By.id("userPassword")).click()
    await driver.findElement(By.id("userPassword")).sendKeys("admin")
    await driver.findElement(By.id("frm_userPassword_confirm")).click()
    await driver.findElement(By.id("frm_userPassword_confirm")).sendKeys("admin")
    await driver.findElement(By.css(".btn-outline-primary")).click()
    assert(await driver.findElement(By.id("notify_message")).getText() == "User account inserted")
  })
})

describe('create-admin-users-email-CI-2', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('create-admin-users-email-CI-2', async function() {
    await driver.get("http://localhost:1111/admin/setup")
    await driver.manage().window().setRect({ width: 654, height: 728 })
    await driver.findElement(By.id("usersName")).click()
    await driver.findElement(By.id("usersName")).sendKeys("admin")
    await driver.findElement(By.id("userEmail")).click()
    await driver.findElement(By.id("userEmail")).sendKeys("@correo.com")
    await driver.findElement(By.id("userPassword")).click()
    await driver.findElement(By.id("userPassword")).sendKeys("admin")
    await driver.findElement(By.id("frm_userPassword_confirm")).click()
    await driver.findElement(By.id("frm_userPassword_confirm")).sendKeys("admin")
    await driver.findElement(By.css(".btn-outline-primary")).click()
    {
      const element = await driver.findElement(By.id("userEmail"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
  })
})

describe('create-admin-users-email-CI-3', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('create-admin-users-email-CI-3', async function() {
    await driver.get("http://localhost:1111/admin/setup")
    await driver.manage().window().setRect({ width: 654, height: 728 })
    await driver.findElement(By.id("usersName")).click()
    await driver.findElement(By.id("usersName")).sendKeys("admin")
    await driver.findElement(By.id("userEmail")).click()
    await driver.findElement(By.id("userEmail")).sendKeys("admin19@")
    await driver.findElement(By.id("userPassword")).click()
    await driver.findElement(By.id("userPassword")).sendKeys("admin")
    await driver.findElement(By.id("frm_userPassword_confirm")).click()
    await driver.findElement(By.id("frm_userPassword_confirm")).sendKeys("admin")
    await driver.findElement(By.css(".btn-outline-primary")).click()
    {
      const element = await driver.findElement(By.id("userEmail"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
  })
})

describe('create-admin-users-email-CI-4', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('create-admin-users-email-CI-4', async function() {
    await driver.get("http://localhost:1111/admin/setup")
    await driver.manage().window().setRect({ width: 654, height: 728 })
    await driver.findElement(By.id("usersName")).click()
    await driver.findElement(By.id("usersName")).sendKeys("admin")
    await driver.findElement(By.id("userEmail")).click()
    await driver.findElement(By.id("userEmail")).sendKeys("\"\"")
    await driver.findElement(By.id("userPassword")).click()
    await driver.findElement(By.id("userPassword")).sendKeys("admin")
    await driver.findElement(By.id("frm_userPassword_confirm")).click()
    await driver.findElement(By.id("frm_userPassword_confirm")).sendKeys("admin")
    await driver.findElement(By.css(".btn-outline-primary")).click()
    {
      const element = await driver.findElement(By.id("userEmail"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
  })
})

describe('create-admin-user-password-CV', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('create-admin-user-password-CV', async function() {
    await driver.get("http://localhost:1111/admin/setup")
    await driver.manage().window().setRect({ width: 654, height: 728 })
    await driver.findElement(By.id("usersName")).click()
    await driver.findElement(By.id("usersName")).sendKeys("admin")
    await driver.findElement(By.id("userEmail")).click()
    await driver.findElement(By.id("userEmail")).sendKeys("admin19@correo.com")
    await driver.findElement(By.id("userPassword")).click()
    await driver.findElement(By.id("userPassword")).sendKeys("admin19")
    await driver.findElement(By.id("frm_userPassword_confirm")).click()
    await driver.findElement(By.id("frm_userPassword_confirm")).sendKeys("admin19")
    await driver.findElement(By.css(".btn-outline-primary")).click()
    assert(await driver.findElement(By.id("notify_message")).getText() == "User account inserted")
  })
})

describe('create-admin-user-password-CI-1', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('create-admin-user-password-CI-1', async function() {
    await driver.get("http://localhost:1111/admin/setup")
    await driver.manage().window().setRect({ width: 654, height: 728 })
    await driver.findElement(By.id("usersName")).click()
    await driver.findElement(By.id("usersName")).sendKeys("admin")
    await driver.findElement(By.id("userEmail")).click()
    await driver.findElement(By.id("userEmail")).sendKeys("admin19@correo.com")
    await driver.findElement(By.id("userPassword")).click()
    await driver.findElement(By.id("userPassword")).sendKeys("adm")
    await driver.findElement(By.id("frm_userPassword_confirm")).click()
    await driver.findElement(By.id("frm_userPassword_confirm")).sendKeys("adm")
    await driver.findElement(By.css(".btn-outline-primary")).click()
    assert(await driver.findElement(By.id("notify_message")).getText() == "User account inserted")
  })
})

describe('create-admin-user-password-CI-2', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('create-admin-user-password-CI-2', async function() {
    await driver.get("http://localhost:1111/admin/setup")
    await driver.manage().window().setRect({ width: 654, height: 728 })
    await driver.findElement(By.id("usersName")).click()
    await driver.findElement(By.id("usersName")).sendKeys("admin")
    await driver.findElement(By.id("userEmail")).click()
    await driver.findElement(By.id("userEmail")).sendKeys("admin19@correo.com")
    await driver.findElement(By.id("userPassword")).click()
    await driver.findElement(By.id("userPassword")).sendKeys("\"\"")
    await driver.findElement(By.id("frm_userPassword_confirm")).click()
    await driver.findElement(By.id("frm_userPassword_confirm")).sendKeys("adm")
    await driver.findElement(By.css(".btn-outline-primary")).click()
    {
      const element = await driver.findElement(By.id("userPassword"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
  })
})

describe('create-admin-user-password-confirm-CV', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('create-admin-user-password-confirm-CV', async function() {
    await driver.get("http://localhost:1111/admin/setup")
    await driver.manage().window().setRect({ width: 654, height: 728 })
    await driver.findElement(By.id("usersName")).click()
    await driver.findElement(By.id("usersName")).sendKeys("admin")
    await driver.findElement(By.id("userEmail")).click()
    await driver.findElement(By.id("userEmail")).sendKeys("admin19@correo.com")
    await driver.findElement(By.id("userPassword")).click()
    await driver.findElement(By.id("userPassword")).sendKeys("admin19")
    await driver.findElement(By.id("frm_userPassword_confirm")).click()
    await driver.findElement(By.id("frm_userPassword_confirm")).sendKeys("admin19")
    await driver.findElement(By.css(".btn-outline-primary")).click()
    assert(await driver.findElement(By.id("notify_message")).getText() == "User account inserted")
  })
})


describe('create-admin-user-password-confirm-CI-1', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('create-admin-user-password-confirm-CI-1', async function() {
    await driver.get("http://localhost:1111/admin/setup")
    await driver.manage().window().setRect({ width: 654, height: 728 })
    await driver.findElement(By.id("usersName")).click()
    await driver.findElement(By.id("usersName")).sendKeys("admin")
    await driver.findElement(By.id("userEmail")).click()
    await driver.findElement(By.id("userEmail")).sendKeys("admin19@correo.com")
    await driver.findElement(By.id("userPassword")).click()
    await driver.findElement(By.id("userPassword")).sendKeys("admin19")
    await driver.findElement(By.id("frm_userPassword_confirm")).click()
    await driver.findElement(By.id("frm_userPassword_confirm")).sendKeys("admin")
    await driver.findElement(By.css(".btn-outline-primary")).click()
    {
      const element = await driver.findElement(By.id("frm_userPassword_confirm"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
  })
})

describe('create-admin-user-password-confirm-CI-2', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('create-admin-user-password-confirm-CI-2', async function() {
    await driver.get("http://localhost:1111/admin/setup")
    await driver.manage().window().setRect({ width: 654, height: 728 })
    await driver.findElement(By.id("usersName")).click()
    await driver.findElement(By.id("usersName")).sendKeys("admin")
    await driver.findElement(By.id("userEmail")).click()
    await driver.findElement(By.id("userEmail")).sendKeys("admin19@correo.com")
    await driver.findElement(By.id("userPassword")).click()
    await driver.findElement(By.id("userPassword")).sendKeys("admin19")
    await driver.findElement(By.id("frm_userPassword_confirm")).click()
    await driver.findElement(By.id("frm_userPassword_confirm")).sendKeys("\"\"")
    await driver.findElement(By.css(".btn-outline-primary")).click()
    {
      const element = await driver.findElement(By.id("frm_userPassword_confirm"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
  })
})
